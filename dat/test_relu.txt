//Initialization
00000000
11111110 // instruction start

00000000
00010000
00000101
10010011 // addi r11, r0, 1 (r11 = 1)
00000000
01100000
00000101
00010011 // addi r10, r0, 6 (r10 = 6)
01000000
10100101
10000001
00110011 // SUB r2, r10, r11 (r2 = r11 - r10 = -5)
01000000
10100101
10000001
10110011 // SUB r3, r10, r11 (r3 = r11 - r10 = -5)

01000000
10110101
00000001
10110011

10000000
00110001
11110001
10110011 // Relu r3

01000000
10110101
00000010
00110011 // SUB r4, r11, r10 (r4 = r10 - r11 = 5)
01000000
10110101
00000010
10110011 // SUB r5, r11, r10 (r5 = r10 - r11 = 5)
10000000
01010010
11110010
10110011 // Relu r5

11111111 // instruction end